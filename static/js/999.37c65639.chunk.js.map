{"version":3,"file":"static/js/999.37c65639.chunk.js","mappings":"8IACA,QAA0B,6BAA1B,EAAyE,qCAAzE,EAA2H,gCAA3H,EAA2K,mCAA3K,EAA4N,iCAA5N,EAA2Q,iC,8BCI3Q,MAgCA,EAhCoBA,IAAsB,IAArB,YAAEC,GAAaD,EAClC,MAAOE,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,IAU3C,OATAC,EAAAA,EAAAA,YAAU,KACR,WACE,MAAMC,EAAaL,EAAYM,KAAKC,IAAQC,EAAAA,EAAAA,IAAWD,KACjDE,QAAiBC,EAAAA,EAAAA,IAAsBL,GAE7CH,EAAaO,EACd,EALD,EAKI,GACH,KAGDE,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAeC,UAC7BH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAuBC,SACnCb,EACEc,MAAK,CAACC,EAAGC,IAAMD,EAAEE,WAAaD,EAAEC,aAChCZ,KAAIa,IAAA,IAAC,MAAEC,EAAK,WAAEF,GAAYC,EAAA,OACzBE,EAAAA,EAAAA,MAAA,MAAIT,UAAWC,EAAkBC,SAAA,EAC/BO,EAAAA,EAAAA,MAAA,QAAMT,UAAWC,EAAqBC,SAAA,CAAC,WAASI,MAChDP,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAmBC,SAAC,QACrCH,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAmBC,SAAEM,MAHDF,EAIlC,OAGP,C","sources":["webpack://star-wars-react/./src/components/PersonPage/PersonFilms/PersonFilms.module.css?02f6","components/PersonPage/PersonFilms/PersonFilms.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"PersonFilms_wrapper__RTyvw\",\"list__container\":\"PersonFilms_list__container__L-leZ\",\"list__item\":\"PersonFilms_list__item__+v6wA\",\"item__episode\":\"PersonFilms_item__episode__VAhyY\",\"item__colon\":\"PersonFilms_item__colon__O4UO5\",\"item__title\":\"PersonFilms_item__title__Mr-cA\"};","import PropTypes from 'prop-types';\r\nimport styles from './PersonFilms.module.css';\r\nimport { changeHTTP, makeConcurrentRequest } from '../../../utils/network';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst PersonFilms = ({ personFilms }) => {\r\n  const [filmsName, setFilmsName] = useState([]);\r\n  useEffect(() => {\r\n    (async () => {\r\n      const filmsHTTPS = personFilms.map((url) => changeHTTP(url));\r\n      const response = await makeConcurrentRequest(filmsHTTPS);\r\n\r\n      setFilmsName(response);\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <ul className={styles.list__container}>\r\n        {filmsName\r\n          .sort((a, z) => a.episode_id - z.episode_id)\r\n          .map(({ title, episode_id }) => (\r\n            <li className={styles.list__item} key={episode_id}>\r\n              <span className={styles.item__episode}>Episode {episode_id}</span>\r\n              <span className={styles.item__colon}>: </span>\r\n              <span className={styles.item__title}>{title}</span>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nPersonFilms.propTypes = {\r\n  personFilms: PropTypes.array,\r\n};\r\n\r\nexport default PersonFilms;\r\n"],"names":["_ref","personFilms","filmsName","setFilmsName","useState","useEffect","filmsHTTPS","map","url","changeHTTP","response","makeConcurrentRequest","_jsx","className","styles","children","sort","a","z","episode_id","_ref2","title","_jsxs"],"sourceRoot":""}